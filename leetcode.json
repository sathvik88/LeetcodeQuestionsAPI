[
  {
    "Question" : "Contains Duplicate", "Categorie" : "Arrays and Hashing", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0217-contains-duplicate.py"
  },
  {
    "Question" : "Valid Anagram", "Categorie" : "Arrays and Hashing", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0242-valid-anagram.py"
  },
  {
    "Question" : "Two Sum", "Categorie" : "Arrays and Hashing", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0001-two-sum.py"
  },
  {
    "Question" : "Group Anagrams", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0049-group-anagrams.py"
  },
  {
    "Question" : "Top K Frequent Elements", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0347-top-k-frequent-elements.py"
  },
  {
    "Question" : "Product of Array Except Self", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0238-product-of-array-except-self.py"
  },
  {
    "Question" : "Valid Sudoku", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0036-valid-sudoku.py"
  },
  {
    "Question" : "Encode and Decode Strings", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0271-encode-and-decode-strings.py"
  },
  {
    "Question" : "Longest Consecutive Sequence", "Categorie" : "Arrays and Hashing", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0128-longest-consecutive-sequence.py"
  },
  {
    "Question" : "Valid Palindrome", "Categorie" : "Two Pointers", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0125-valid-palindrome.py"
  },
  {
    "Question" : "Two Sum II", "Categorie" : "Two Pointers", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0167-two-sum-ii-input-array-is-sorted.py"
  },
  {
    "Question" : "3Sum", "Categorie" : "Two Pointers", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0015-3sum.py"
  },
  {
    "Question" : "Container with Most Water", "Categorie" : "Two Pointers", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0011-container-with-most-water.py"
  },
  {
    "Question" : "Trapping Rain Water", "Categorie" : "Two Pointers", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0042-trapping-rain-water.py"
  },
  {
    "Question" : "Best Time to Buy & Sell Stocks", "Categorie" : "Sliding Window", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0121-best-time-to-buy-and-sell-stock.py"
  },
  {
    "Question" : "Longest Substring W/O Repeating Chars", "Categorie" : "Sliding Window", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0003-longest-substring-without-repeating-characters.py"
  },
  {
    "Question" : "Longest Repeating Char Replacement", "Categorie" : "Sliding Window", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0424-longest-repeating-character-replacement.py"
  },
  {
    "Question" : "Permutation In String", "Categorie" : "Sliding Window", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0567-permutation-in-string.py"
  },
  {
    "Question" : "Minimum Window Substring", "Categorie" : "Sliding Window", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0076-minimum-window-substring.py"
  },
  {
    "Question" : "Sliding Window Maximum", "Categorie" : "Sliding Window", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0239-sliding-window-maximum.py"
  },
  {
    "Question" : "Valid Parentheses", "Categorie" : "Stack", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0020-valid-parentheses.py"
  },
  {
    "Question" : "Min Stack", "Categorie" : "Stack", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0155-min-stack.py"
  },
  {
    "Question" : "Evaluate Reverse Polish Notation", "Categorie" : "Stack", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0150-evaluate-reverse-polish-notation.py"
  },
  {
    "Question" : "Car Fleet", "Categorie" : "Stack", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0853-car-fleet.py"
  },
  {
    "Question" : "Daily Temperatures", "Categorie" : "Stack", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0739-daily-temperatures.py"
  },
  {
    "Question" : "Generate Parentheses", "Categorie" : "Stack", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0022-generate-parentheses.py"
  },
  {
    "Question" : "Largest Rectangle in Histogram", "Categorie" : "Stack", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0084-largest-rectangle-in-histogram.py"
  },
  {
    "Question" : "Binary Search", "Categorie" : "Binary Search", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0704-binary-search.py"
  },
  {
    "Question" : "Search 2D Matrix", "Categorie" : "Binary Search", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0074-search-a-2d-matrix.py"
  },
  {
    "Question" : "Koko Eating Bananas", "Categorie" : "Binary Search", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0875-koko-eating-bananas.py"
  },
  {
    "Question" : "Search Rotated Sorted Array", "Categorie" : "Binary Search", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0033-search-in-rotated-sorted-array.py"
  },
  {
    "Question" : "Find Min in Rotated Sorted Array", "Categorie" : "Binary Search", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0153-find-minimum-in-rotated-sorted-array.py"
  },
  {
    "Question" : "Time Based Key-Value Store", "Categorie" : "Binary Search", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0981-time-based-key-value-store.py"
  },
  {
    "Question" : "Find Median of Two Sorted Arrays", "Categorie" : "Binary Search", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0004-median-of-two-sorted-arrays.py"
  },
  {
    "Question" : "Reverse Linked List", "Categorie" : "Linked List", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0206-reverse-linked-list.py"
  },
  {
    "Question" : "Merge Two Linked Lists", "Categorie" : "Linked List", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0021-merge-two-sorted-lists.py"
  },
  {
    "Question" : "Reorder List", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0143-reorder-list.py"
  },
  {
    "Question" : "Remove Nth Node from End of List", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0019-remove-nth-node-from-end-of-list.py"
  },
  {
    "Question" : "Copy List with Random Pointer", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0138-copy-list-with-random-pointer.py"
  },
  {
    "Question" : "Add Two Numbers", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0002-add-two-numbers.py"
  },
  {
    "Question" : "Linked Listy Cycle", "Categorie" : "Linked List", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0141-linked-list-cycle.py"
  },
  {
    "Question" : "Find the Duplicate Number", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0287-find-the-duplicate-number.py"
  },
  {
    "Question" : "LRU Cache", "Categorie" : "Linked List", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0146-lru-cache.py"
  },
  {
    "Question" : "Merge K Sorted Lists", "Categorie" : "Linked List", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0023-merge-k-sorted-lists.py"
  },
  {
    "Question" : "Reverse Nodes in K-Group", "Categorie" : "Linked List", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0025-reverse-nodes-in-k-group.py"
  },
  {
    "Question" : "Invert Binary Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0226-invert-binary-tree.py"
  },
  {
    "Question" : "Maximum Depth of Binary Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0104-maximum-depth-of-binary-Tree.py"
  },
  {
    "Question" : "Diameter of a Binary Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0543-diameter-of-binary-tree.py"
  },
  {
    "Question" : "Balanced Binary Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0110-balanced-binary-tree.py"
  },
  {
    "Question" : "Same Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0100-same-tree.py"
  },
  {
    "Question" : "Subtree of Another Tree", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0572-subtree-of-another-tree.py"
  },
  {
    "Question" : "Lowest Common Ancestor of a BST", "Categorie" : "Trees", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0235-lowest-common-ancestor-of-a-binary-search-tree.py"
  },
  {
    "Question" : "Binary Tree Level Order Traversal", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0102-binary-tree-level-order-traversal.py"
  },
  {
    "Question" : "Binary Tree Right Side View", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0199-binary-tree-right-side-view.py"
  },
  {
    "Question" : "Count Good Nodes in a Binary Tree", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1448-count-good-nodes-in-binary-tree.py"
  },
  {
    "Question" : "Validate a BST", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0098-validate-binary-search-tree.py"
  },
  {
    "Question" : "Kth Smallest Element in a BST", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0230-kth-smallest-element-in-a-bst.py"
  },
  {
    "Question" : "Construct Tree from Pre and Inorder Tree", "Categorie" : "Trees", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0105-construct-binary-tree-from-preorder-and-inorder-traversal.py"
  },
  {
    "Question" : "Implement Trie", "Categorie" : "Tries", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0208-implement-trie.py"
  },
  {
    "Question" : "Design Add and Search Word DS", "Categorie" : "Tries", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0211-design-add-and-search-words-data-structure.py"
  },
  {
    "Question" : "Word Search II", "Categorie" : "Tries", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0212-word-search-ii.py"
  },
  {
    "Question" : "Kth Largest Element in a Stream", "Categorie" : "Heap", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0703-kth-largest-element-in-a-stream.py"
  },
  {
    "Question" : "Last Stone Weight", "Categorie" : "Heap", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1046-last-stone-weight.py"
  },
  {
    "Question" : "K Closest Points to Origin", "Categorie" : "Heap", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0973-k-closest-points-to-origin.py"
  },
  {
    "Question" : "Kth Largest Element in an Array", "Categorie" : "Heap", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0215-kth-largest-element-in-an-array.py"
  },
  {
    "Question" : "Task Scheduler", "Categorie" : "Heap", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0621-task-scheduler.py"
  },
  {
    "Question" : "Design Twitter", "Categorie" : "Heap", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0355-design-twitter.py"
  },
  {
    "Question" : "Find Median from Data Stream", "Categorie" : "Heap", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0295-find-median-from-data-stream.py"
  },
  {
    "Question" : "Subsets", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0078-subsets.py"
  },
  {
    "Question" : "Combination Sum", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0039-combination-sum.py"
  },
  {
    "Question" : "Permutations", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0046-permutations.py"
  },
  {
    "Question" : "Subsets II", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0090-subsets-ii.py"
  },
  {
    "Question" : "Combination Sum II", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0040-combination-sum-ii.py"
  },
  {
    "Question" : "Word Search", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0079-word-search.py"
  },
  {
    "Question" : "Palindrome Partitioning", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0131-palindrome-partitioning.py"
  },
  {
    "Question" : "Letter Combinations of a Phone Number", "Categorie" : "Backtracking", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0017-letter-combinations-of-a-phone-number.py"
  },
  {
    "Question" : "N-Queens", "Categorie" : "Backtracking", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0051-n-queens.py"
  },
  {
    "Question" : "Number of Islands", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0200-number-of-islands.py"
  },
  {
    "Question" : "Clone Graph", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0133-clone-graph.py"
  },
  {
    "Question" : "Max Area of Island", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0695-max-area-of-island.py"
  },
  {
    "Question" : "Pacific Atlantic Waterflow", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0417-pacific-atlantic-waterflow.py"
  },
  {
    "Question" : "Surrounded Regions", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0130-surrounded-regions.py"
  },
  {
    "Question" : "Rotting Oranges", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0994-rotting-oranges.py"
  },
  {
    "Question" : "Walls and Gates", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0286-walls-and-gates.py"
  },
  {
    "Question" : "Course Schedule", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0207-course-schedule.py"
  },
  {
    "Question" : "Course Schedule II", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0210-course-schedule-ii.py"
  },
  {
    "Question" : "Redundant Connection", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0684-redundant-connection.py"
  },
  {
    "Question" : "Number of Connected Components in Graph", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0323-number-of-connected-components-in-an-undirected-graph.py"
  },
  {
    "Question" : "Graph Valid Tree", "Categorie" : "Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0261-graph-valid-tree.py"
  },
  {
    "Question" : "Word Ladder", "Categorie" : "Graphs", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0127-word-ladder.py"
  },
  {
    "Question" : "Reconstruct Itinerary", "Categorie" : "Advanced Graphs", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0332-reconstruct-itinerary.py"
  },
  {
    "Question" : "Min Cost to Connect all Points", "Categorie" : "Advanced Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1584-min-cost-to-connect-all-points.py"
  },
  {
    "Question" : "Network Delay Time", "Categorie" : "Advanced Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0743-network-delay-time.py"
  },
  {
    "Question" : "Swim in Rising Water", "Categorie" : "Advanced Graphs", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0778-swim-in-rising-water.py"
  },
  {
    "Question" : "Alien Dictionary", "Categorie" : "Advanced Graphs", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0269-alien-dictionary.py"
  },
  {
    "Question" : "Cheapest Flights Within K Stops", "Categorie" : "Advanced Graphs", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0787-cheapest-flights-within-k-stops.py"
  },
  {
    "Question" : "Climbing Stairs", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0070-climbing-stairs.py"
  },
  {
    "Question" : "Min Cost Climbing Stairs", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0746-min-cost-climbing-stairs.py"
  },
  {
    "Question" : "House Robber", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0198-house-robber.py"
  },
  {
    "Question" : "House Robber II", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0213-house-robber-ii.py"
  },
  {
    "Question" : "Longest Palindromic Substring", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0005-longest-palindromic-substring.py"
  },
  {
    "Question" : "Palindromic Substrings", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0647-palindromic-substrings.py"
  },
  {
    "Question" : "Decode Ways", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0091-decode-ways.py"
  },
  {
    "Question" : "Coin Change", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0322-coin-change.py"
  },
  {
    "Question" : "Maximum Product Subarray", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0152-maximum-product-subarray.py"
  },
  {
    "Question" : "Word Break", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0139-word-break.py"
  },
  {
    "Question" : "Longest Increasing Subsequence", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0300-longest-increasing-subsequence.py"
  },
  {
    "Question" : "Partial Equal Subset Sum", "Categorie" : "1-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0416-partition-equal-subset-sum.py"
  },
  {
    "Question" : "Unique Paths", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0062-unique-paths.py"
  },
  {
    "Question" : "Longest Common Subsequence", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1143-longest-common-subsequence.py"
  },
  {
    "Question" : "Best Time to Buy/Sell Stock Cooldown", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0309-best-time-to-buy-and-sell-stock-with-cooldown.py"
  },
  {
    "Question" : "Coin Change II", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0518-coin-change-2.py"
  },
  {
    "Question" : "Target Sum", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0494-target-sum.py"
  },
  {
    "Question" : "Interleaving String", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0097-interleaving-strings.py"
  },
  {
    "Question" : "Longest Increasing Path in a Matrix", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0329-longest-increasing-path-in-a-matrix.py"
  },
  {
    "Question" : "Distinct Subsequences", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0115-distinct-subsequences.py"
  },
  {
    "Question" : "Edit Distance", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0072-edit-distance.py"
  },
  {
    "Question" : "Burst Balloons", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0312-burst-balloons.py"
  },
  {
    "Question" : "Regular Expression Matching", "Categorie" : "2-D Dynamic Programming", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0010-regular-expression-matching.py"
  },
  {
    "Question" : "Maximum Subarray", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0053-maximum-subarray.py"
  },
  {
    "Question" : "Jump Game", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0055-jump-game.py"
  },
  {
    "Question" : "Jump Game II", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0045-jump-game-ii.py"
  },
  {
    "Question" : "Gas Station", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0134-gas-station.py"
  },
  {
    "Question" : "Hand of Striaght", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0846-hand-of-straights.py"
  },
  {
    "Question" : "Merge Triplets to From Target Triplet", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1899-merge-triplets-to-form-target-triplet.py"
  },
  {
    "Question" : "Partition Labels", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0763-partition-labels.py"
  },
  {
    "Question" : "Valid Parenthesis String", "Categorie" : "Greedy", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0678-valid-parenthesis-string.py"
  },
  {
    "Question" : "Insert Interval", "Categorie" : "Intervals", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0057-insert-interval.py"
  },
  {
    "Question" : "Merge Intervals", "Categorie" : "Intervals", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0056-merge-intervals.py"
  },
  {
    "Question" : "Non-Overlapping Intervals", "Categorie" : "Intervals", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0435-non-overlapping-intervals.py"
  },
  {
    "Question" : "Meeting Rooms", "Categorie" : "Intervals", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0252-meeting-rooms.py"
  },
  {
    "Question" : "Meeting Rooms II", "Categorie" : "Intervals", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0253-meeting-rooms-ii.py"
  },
  {
    "Question" : "Minimum Interval to Include Each Query", "Categorie" : "Intervals", "Difficulty": "Hard", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1851-minimum-interval-to-include-each-query.py"
  },
  {
    "Question" : "Rotate Image", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0048-rotate-image.py"
  },
  {
    "Question" : "Spiral Matrix", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0054-spiral-matrix.py"
  },
  {
    "Question" : "Set Matrix Zeros", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0073-set-matrix-zeroes.py"
  },
  {
    "Question" : "Happy Number", "Categorie" : "Math & Geometery", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0202-happy-number.py"
  },
  {
    "Question" : "Plus One", "Categorie" : "Math & Geometery", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0066-plus-one.py"
  },
  {
    "Question" : "Pow(x,n)", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0050-powx-n.py"
  },
  {
    "Question" : "Multiply Strings", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0043-multiply-strings.py"
  },
  {
    "Question" : "Detect Squares", "Categorie" : "Math & Geometery", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/2013-detect-squares.py"
  },
  {
    "Question" : "Single Number", "Categorie" : "Bit Manipulation", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0136-single-number.py"
  },
  {
    "Question" : "Number of 1 Bits", "Categorie" : "Bit Manipulation", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0191-number-of-1-bits.py"
  },
  {
    "Question" : "Counting Bits", "Categorie" : "Bit Manipulation", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0338-counting-bits.py"
  },
  {
    "Question" : "Reverse Bits", "Categorie" : "Bit Manipulation", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0190-reverse-bits.py"
  },
  {
    "Question" : "Missing Number", "Categorie" : "Bit Manipulation", "Difficulty": "Easy", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0268-missing-number.py"
  },
  {
    "Question" : "Sum of Two Integers", "Categorie" : "Bit Manipulation", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0371-sum-of-two-integers.py"
  },
  {
    "Question" : "Reverse Integer", "Categorie" : "Bit Manipulation", "Difficulty": "Medium", "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0007-reverse-integer.py"
  }
  
]
