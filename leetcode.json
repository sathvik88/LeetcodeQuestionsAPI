[
  {
    "Question" : "Contains Duplicate",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0217-contains-duplicate.py",
    "Prompt": "Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."
  },
  {
    "Question" : "Valid Anagram",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0242-valid-anagram.py",
    "Prompt": "Given two strings s and t, return true if t is an anagram of s, and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."

  },
  {
    "Question" : "Two Sum",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0001-two-sum.py",
    "Prompt": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order."

  },
  {
    "Question" : "Group Anagrams",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0049-group-anagrams.py",
    "Prompt": "Given an array of strings strs, group the anagrams together. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. You can return the answer in any order."

  },
  {
    "Question" : "Top K Frequent Elements",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0347-top-k-frequent-elements.py",
    "Prompt": "Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order."

  },
  {
    "Question" : "Product of Array Except Self",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0238-product-of-array-except-self.py",
    "Prompt": "Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i]. The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer. You must write an algorithm that runs in O(n) time and without using the division operation."

  },
  {
    "Question" : "Valid Sudoku",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0036-valid-sudoku.py",
    "Prompt": "Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules: Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition."
  },
  {
    "Question" : "Encode and Decode Strings",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0271-encode-and-decode-strings.py",
    "Prompt": "Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings."

  },
  {
    "Question" : "Longest Consecutive Sequence",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0128-longest-consecutive-sequence.py",
    "Prompt": "Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence."

  },
  {
    "Question" : "Valid Palindrome",
    "Categorie" : "Two Pointers",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0125-valid-palindrome.py",
    "Prompt": "A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers. Given a string s, return true if it is a palindrome, or false otherwise."

  },
  {
    "Question" : "Two Sum II",
    "Categorie" : "Two Pointers",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0167-two-sum-ii-input-array-is-sorted.py",
    "Prompt": "Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 <= numbers. length. Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2. The tests are generated such that there is exactly one solution."

  },
  {
    "Question" : "3Sum",
    "Categorie" : "Two Pointers",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0015-3sum.py",
    "Prompt": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets."

  },
  {
    "Question" : "Container with Most Water",
    "Categorie" : "Two Pointers",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0011-container-with-most-water.py",
    "Prompt": "You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]). Find two lines that together with the x-axis form a container, such that the container contains the most water. Return the maximum amount of water a container can store."
  },
  {
    "Question" : "Trapping Rain Water",
    "Categorie" : "Two Pointers",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0042-trapping-rain-water.py",
    "Prompt": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining."

  },
  {
    "Question" : "Best Time to Buy & Sell Stocks",
    "Categorie" : "Sliding Window",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0121-best-time-to-buy-and-sell-stock.py",
    "Prompt": "You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0."

  },
  {
    "Question" : "Longest Substring W/O Repeating Chars",
    "Categorie" : "Sliding Window",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0003-longest-substring-without-repeating-characters.py",
    "Prompt": "Given a string s, find the length of the longest substring without repeating characters."

  },
  {
    "Question" : "Longest Repeating Char Replacement",
    "Categorie" : "Sliding Window",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0424-longest-repeating-character-replacement.py",
    "Prompt": "You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times. Return the length of the longest substring containing the same letter you can get after performing the above operations."

  },
  {
    "Question" : "Permutation In String",
    "Categorie" : "Sliding Window",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0567-permutation-in-string.py",
    "Prompt": "Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise. In other words, return true if one of s1's permutations is the substring of s2."

  },
  {
    "Question" : "Minimum Window Substring",
    "Categorie" : "Sliding Window",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0076-minimum-window-substring.py",
    "Prompt": "Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string. The testcases will be generated such that the answer is unique."

  },
  {
    "Question" : "Sliding Window Maximum",
    "Categorie" : "Sliding Window",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0239-sliding-window-maximum.py",
    "Prompt": "You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Return the max sliding window."

  },
  {
    "Question" : "Valid Parentheses",
    "Categorie" : "Stack",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0020-valid-parentheses.py",
    "Prompt": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid."

  },
  {
    "Question" : "Min Stack",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0155-min-stack.py",
    "Prompt": "Design a stack that supports push, pop, top, and retrieving the minimum element in constant time. Implement the MinStack class: MinStack() initializes the stack object. void push(int val) pushes the element val onto the stack. void pop() removes the element on the top of the stack. int top() gets the top element of the stack. int getMin() retrieves the minimum element in the stack. You must implement a solution with O(1) time complexity for each function."

  },
  {
    "Question" : "Evaluate Reverse Polish Notation",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0150-evaluate-reverse-polish-notation.py",
    "Prompt": "Given an integer array nums, return true if any value appears at least t"

  },
  {
    "Question" : "Car Fleet",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0853-car-fleet.py",
    "Prompt":  "There are n cars going to the same destination along a one-lane road. The destination is target miles away. You are given two integer array position and speed, both of length n, where position[i] is the position of the ith car and speed[i] is the speed of the ith car (in miles per hour). A car can never pass another car ahead of it, but it can catch up to it and drive bumper to bumper at the same speed. The faster car will slow down to match the slower car's speed. The distance between these two cars is ignored (i.e., they are assumed to have the same position). A car fleet is some non-empty set of cars driving at the same position and same speed. Note that a single car is also a car fleet. If a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet. Return the number of car fleets that will arrive at the destination."

  },
  {
    "Question" : "Daily Temperatures",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0739-daily-temperatures.py",
    "Prompt": "Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead."

  },
  {
    "Question" : "Generate Parentheses",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0022-generate-parentheses.py",
    "Prompt": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses."

  },
  {
    "Question" : "Largest Rectangle in Histogram",
    "Categorie" : "Stack",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0084-largest-rectangle-in-histogram.py",
    "Prompt": "Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram."

  },
  {
    "Question" : "Binary Search",
    "Categorie" : "Binary Search",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0704-binary-search.py",
    "Prompt": "Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1."

  },
  {
    "Question" : "Search 2D Matrix",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0074-search-a-2d-matrix.py",
    "Prompt": "You are given an m x n integer matrix matrix with the following two properties: Each row is sorted in non-decreasing order. The first integer of each row is greater than the last integer of the previous row. Given an integer target, return true if target is in matrix or false otherwise. You must write a solution in O(log(m * n)) time complexity."

  },
  {
    "Question" : "Koko Eating Bananas",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0875-koko-eating-bananas.py",
    "Prompt": "Koko loves to eat bananas. There are n piles of bananas, the ith pile has piles[i] bananas. The guards have gone and will come back in h hours. Koko can decide her bananas-per-hour eating speed of k. Each hour, she chooses some pile of bananas and eats k bananas from that pile. If the pile has less than k bananas, she eats all of them instead and will not eat any more bananas during this hour. Koko likes to eat slowly but still wants to finish eating all the bananas before the guards return. Return the minimum integer k such that she can eat all the bananas within h hours."

  },
  {
    "Question" : "Search Rotated Sorted Array",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0033-search-in-rotated-sorted-array.py",
    "Prompt": "There is an integer array nums sorted in ascending order (with distinct values). Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2]. Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums."

  },
  {
    "Question" : "Find Min in Rotated Sorted Array",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0153-find-minimum-in-rotated-sorted-array.py",
    "Prompt": "Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become: [4,5,6,7,0,1,2] if it was rotated 4 times. [0,1,2,4,5,6,7] if it was rotated 7 times. Notice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]]."

  },
  {
    "Question" : "Time Based Key-Value Store",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0981-time-based-key-value-store.py",
    "Prompt": "Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp. Implement the TimeMap class: TimeMap() Initializes the object of the data structure. void set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp. String get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp. If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns ""."

  },
  {
    "Question" : "Find Median of Two Sorted Arrays",
    "Categorie" : "Binary Search",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0004-median-of-two-sorted-arrays.py",
    "Prompt": "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. The overall run time complexity should be O(log (m+n))."

  },
  {
    "Question" : "Reverse Linked List",
    "Categorie" : "Linked List",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0206-reverse-linked-list.py",
    "Prompt": "Given the head of a singly linked list, reverse the list, and return the reversed list."

  },
  {
    "Question" : "Merge Two Linked Lists",
    "Categorie" : "Linked List",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0021-merge-two-sorted-lists.py",
    "Prompt": "You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list."

  },
  {
    "Question" : "Reorder List",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0143-reorder-list.py",
    "Prompt": "You are given the head of a singly linked-list. The list can be represented as: 'L0 → L1 → … → Ln - 1 → Ln' Reorder the list to be on the following form: 'L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …' You may not modify the values in the list's nodes. Only nodes themselves may be changed."

  },
  {
    "Question" : "Remove Nth Node from End of List",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0019-remove-nth-node-from-end-of-list.py",
    "Prompt": "Given the head of a linked list, remove the nth node from the end of the list and return its head."

  },
  {
    "Question" : "Copy List with Random Pointer",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0138-copy-list-with-random-pointer.py",
    "Prompt": "A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null. Construct a deep copy of the list. The deep copy should consist of exactly n brand new nodes, where each new node has its value set to the value of its corresponding original node. Both the next and random pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. None of the pointers in the new list should point to nodes in the original list. For example, if there are two nodes X and Y in the original list, where X.random --> Y, then for the corresponding two nodes x and y in the copied list, x.random --> y. Return the head of the copied linked list."

  },
  {
    "Question" : "Add Two Numbers",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0002-add-two-numbers.py",
    "Prompt": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself."

  },
  {
    "Question" : "Linked Listy Cycle",
    "Categorie" : "Linked List",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0141-linked-list-cycle.py",
    "Prompt": "Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter. Return true if there is a cycle in the linked list. Otherwise, return false."

  },
  {
    "Question" : "Find the Duplicate Number",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0287-find-the-duplicate-number.py",
    "Prompt": "Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive. There is only one repeated number in nums, return this repeated number. You must solve the problem without modifying the array nums and uses only constant extra space."

  },
  {
    "Question" : "LRU Cache",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0146-lru-cache.py",
    "Prompt": "Design a data structure that follows the constraints of a Least Recently Used (LRU) cache. Implement the LRUCache class: LRUCache(int capacity) Initialize the LRU cache with positive size capacity. int get(int key) Return the value of the key if the key exists, otherwise return -1. void put(int key, int value) Update the value of the key if the key exists. Otherwise, add the key-value pair to the cache. If the number of keys exceeds the capacity from this operation, evict the least recently used key. The functions get and put must each run in O(1) average time complexity."

  },
  {
    "Question" : "Merge K Sorted Lists",
    "Categorie" : "Linked List",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0023-merge-k-sorted-lists.py",
    "Prompt": "You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it."

  },
  {
    "Question" : "Reverse Nodes in K-Group",
    "Categorie" : "Linked List",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0025-reverse-nodes-in-k-group.py",
    "Prompt": "Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list. k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is. You may not alter the values in the list's nodes, only nodes themselves may be changed."
  },
  {
    "Question" : "Invert Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0226-invert-binary-tree.py",
    "Prompt": "Given the root of a binary tree, invert the tree, and return its root."
  },
  {
    "Question" : "Maximum Depth of Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0104-maximum-depth-of-binary-Tree.py",
    "Prompt": "Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node."
  },
  {
    "Question" : "Diameter of a Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0543-diameter-of-binary-tree.py",
    "Prompt": "Given the root of a binary tree, return the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root. The length of a path between two nodes is represented by the number of edges between them."
  },
  {
    "Question" : "Balanced Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0110-balanced-binary-tree.py",
    "Prompt": "Given a binary tree, determine if it is height-balanced."
  },
  {
    "Question" : "Same Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0100-same-tree.py",
    "Prompt": "Given the roots of two binary trees p and q, write a function to check if they are the same or not. Two binary trees are considered the same if they are structurally identical, and the nodes have the same value."
  },
  {
    "Question" : "Subtree of Another Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0572-subtree-of-another-tree.py",
    "Prompt": "Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise. A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself."
  },
  {
    "Question" : "Lowest Common Ancestor of a BST",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0235-lowest-common-ancestor-of-a-binary-search-tree.py",
    "Prompt": "Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST. According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”"
  },
  {
    "Question" : "Binary Tree Level Order Traversal",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0102-binary-tree-level-order-traversal.py",
    "Prompt": "Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level)."
  },
  {
    "Question" : "Binary Tree Right Side View",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0199-binary-tree-right-side-view.py",
    "Prompt": "Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom."
  },
  {
    "Question" : "Count Good Nodes in a Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1448-count-good-nodes-in-binary-tree.py",
    "Prompt": "Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X. Return the number of good nodes in the binary tree."
  },
  {
    "Question" : "Validate a BST",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0098-validate-binary-search-tree.py",
    "Prompt": "Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows: The left subtree of a node contains only nodes with keys less than the node's key. The right subtree of a node contains only nodes with keys greater than the node's key. Both the left and right subtrees must also be binary search trees."
  },
  {
    "Question" : "Kth Smallest Element in a BST",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0230-kth-smallest-element-in-a-bst.py",
    "Prompt": "Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree."
  },
  {
    "Question" : "Construct Tree from Pre and Inorder Tree",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0105-construct-binary-tree-from-preorder-and-inorder-traversal.py",
    "Prompt": "Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree."
  },
  {
    "Question" : "Implement Trie",
    "Categorie" : "Tries",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0208-implement-trie.py",
    "Prompt": "A trie or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker. Implement the Trie class: Trie() Initializes the trie object. void insert(String word) Inserts the string word into the trie. boolean search(String word) Returns true if the string word is in the trie (i.e., was inserted before), and false otherwise. boolean startsWith(String prefix) Returns true if there is a previously inserted string word that has the prefix prefix, and false otherwise."
  },
  {
    "Question" : "Design Add and Search Word DS",
    "Categorie" : "Tries",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0211-design-add-and-search-words-data-structure.py",
    "Prompt": "Design a data structure that supports adding new words and finding if a string matches any previously added string. Implement the WordDictionary class: WordDictionary() Initializes the object. void addWord(word) Adds word to the data structure, it can be matched later. bool search(word) Returns true if there is any string in the data structure that matches word or false otherwise. word may contain dots '.' where dots can be matched with any letter."
  },
  {
    "Question" : "Word Search II",
    "Categorie" : "Tries",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0212-word-search-ii.py",
    "Prompt": "Given an m x n board of characters and a list of strings words, return all words on the board. Each word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word."
  },
  {
    "Question" : "Kth Largest Element in a Stream",
    "Categorie" : "Heap",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0703-kth-largest-element-in-a-stream.py",
    "Prompt": "Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element. Implement KthLargest class: KthLargest(int k, int[] nums) Initializes the object with the integer k and the stream of integers nums. int add(int val) Appends the integer val to the stream and returns the element representing the kth largest element in the stream."
  },
  {
    "Question" : "Last Stone Weight",
    "Categorie" : "Heap",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1046-last-stone-weight.py",
    "Prompt": "You are given an array of integers stones where stones[i] is the weight of the ith stone. We are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is: If x == y, both stones are destroyed, and If x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x. At the end of the game, there is at most one stone left.Return the weight of the last remaining stone. If there are no stones left, return 0."
  },
  {
    "Question" : "K Closest Points to Origin",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0973-k-closest-points-to-origin.py",
    "Prompt": "Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0). The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)2 + (y1 - y2)2). You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in)."
  },
  {
    "Question" : "Kth Largest Element in an Array",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0215-kth-largest-element-in-an-array.py",
    "Prompt": "Given an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. You must solve it in O(n) time complexity."
  },
  {
    "Question" : "Task Scheduler",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0621-task-scheduler.py",
    "Prompt": "Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle. However, there is a non-negative integer n that represents the cooldown period between two same tasks (the same letter in the array), that is that there must be at least n units of time between any two same tasks. Return the least number of units of times that the CPU will take to finish all the given tasks."
  },
  {
    "Question" : "Design Twitter",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0355-design-twitter.py",
    "Prompt": "Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the 10 most recent tweets in the user's news feed. Implement the Twitter class: Twitter() Initializes your twitter object. void postTweet(int userId, int tweetId) Composes a new tweet with ID tweetId by the user userId. Each call to this function will be made with a unique tweetId. List<Integer> getNewsFeed(int userId) Retrieves the 10 most recent tweet IDs in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be ordered from most recent to least recent. void follow(int followerId, int followeeId) The user with ID followerId started following the user with ID followeeId. void unfollow(int followerId, int followeeId) The user with ID followerId started unfollowing the user with ID followeeId."
  },
  {
    "Question" : "Find Median from Data Stream",
    "Categorie" : "Heap",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0295-find-median-from-data-stream.py",
    "Prompt": "The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value, and the median is the mean of the two middle values. For example, for arr = [2,3,4], the median is 3. For example, for arr = [2,3], the median is (2 + 3) / 2 = 2.5. Implement the MedianFinder class: MedianFinder() initializes the MedianFinder object. void addNum(int num) adds the integer num from the data stream to the data structure. double findMedian() returns the median of all elements so far. Answers within 10-5 of the actual answer will be accepted."
  },
  {
    "Question" : "Subsets",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0078-subsets.py",
    "Prompt": "Given an integer array nums of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order."
  },
  {
    "Question" : "Combination Sum",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0039-combination-sum.py",
    "Prompt": "Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order. The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different. The test cases are generated such that the number of unique combinations that sum up to target is less than 150 combinations for the given input."
  },
  {
    "Question" : "Permutations",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0046-permutations.py",
    "Prompt": "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order."
  },
  {
    "Question" : "Subsets II",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0090-subsets-ii.py",
    "Prompt": "Given an integer array nums that may contain duplicates, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order."
  },
  {
    "Question" : "Combination Sum II",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0040-combination-sum-ii.py",
    "Prompt": "Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target. Each number in candidates may only be used once in the combination. Note: The solution set must not contain duplicate combinations."
  },
  {
    "Question" : "Word Search",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0079-word-search.py",
    "Prompt": "Given an m x n grid of characters board and a string word, return true if word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once."
  },
  {
    "Question" : "Palindrome Partitioning",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0131-palindrome-partitioning.py",
    "Prompt": "Given a string s, partition s such that every substring of the partition is a palindrome. Return all possible palindrome partitioning of s.

"
  },
  {
    "Question" : "Letter Combinations of a Phone Number",
    "Categorie" : "Backtracking",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0017-letter-combinations-of-a-phone-number.py",
    "Prompt": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters."
  },
  {
    "Question" : "N-Queens",
    "Categorie" : "Backtracking",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0051-n-queens.py",
    "Prompt": "The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order. Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively."
  },
  {
    "Question" : "Number of Islands",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0200-number-of-islands.py",
    "Prompt": "Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water."
  },
  {
    "Question" : "Clone Graph",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0133-clone-graph.py",
    "Prompt": "Given a reference of a node in a connected undirected graph. Return a deep copy (clone) of the graph. Each node in the graph contains a value (int) and a list (List[Node]) of its neighbors."
  },
  {
    "Question" : "Max Area of Island",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0695-max-area-of-island.py",
    "Prompt": "You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water. The area of an island is the number of cells with a value 1 in the island. Return the maximum area of an island in grid. If there is no island, return 0."
  },
  {
    "Question" : "Pacific Atlantic Waterflow",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0417-pacific-atlantic-waterflow.py",
    "Prompt": "There is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges. The island is partitioned into a grid of square cells. You are given an m x n integer matrix heights where heights[r][c] represents the height above sea level of the cell at coordinate (r, c). The island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is less than or equal to the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean. Return a 2D list of grid coordinates result where result[i] = [ri, ci] denotes that rain water can flow from cell (ri, ci) to both the Pacific and Atlantic oceans."
  },
  {
    "Question" : "Surrounded Regions",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0130-surrounded-regions.py",
    "Prompt": "Given an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'. A region is captured by flipping all 'O's into 'X's in that surrounded region."
  },
  {
    "Question" : "Rotting Oranges",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0994-rotting-oranges.py",
    "Prompt": "You are given an m x n grid where each cell can have one of three values: 0 representing an empty cell, 1 representing a fresh orange, or 2 representing a rotten orange. Every minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten. Return the minimum number of minutes that must elapse until no cell has a fresh orange. If this is impossible, return -1."
  },
  {
    "Question" : "Walls and Gates",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0286-walls-and-gates.py",
    "Prompt": "You are given an m x n grid rooms initialized with these three possible values. -1 A wall or an obstacle. 0 A gate. INF Infinity means an empty room. We use the value 231 - 1 = 2147483647 to represent INF as you may assume that the distance to a gate is less than 2147483647. Fill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, it should be filled with INF."
  },
  {
    "Question" : "Course Schedule",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0207-course-schedule.py",
    "Prompt": "There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai. For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1. Return true if you can finish all courses. Otherwise, return false."
  },
  {
    "Question" : "Course Schedule II",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0210-course-schedule-ii.py",
    "Prompt": "There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai. For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1. Return the ordering of courses you should take to finish all courses. If there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
  },
  {
    "Question" : "Redundant Connection",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0684-redundant-connection.py",
    "Prompt": "In this problem, a tree is an undirected graph that is connected and has no cycles. You are given a graph that started as a tree with n nodes labeled from 1 to n, with one additional edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed. The graph is represented as an array edges of length n where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph. Return an edge that can be removed so that the resulting graph is a tree of n nodes. If there are multiple answers, return the answer that occurs last in the input."
  },
  {
    "Question" : "Number of Connected Components in Graph",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0323-number-of-connected-components-in-an-undirected-graph.py",
    "Prompt": "You have a graph of n nodes. You are given an integer n and an array edges where edges[i] = [ai, bi] indicates that there is an edge between ai and bi in the graph. Return the number of connected components in the graph."
  },
  {
    "Question" : "Graph Valid Tree",
    "Categorie" : "Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0261-graph-valid-tree.py",
    "Prompt": "You have a graph of n nodes labeled from 0 to n - 1. You are given an integer n and a list of edges where edges[i] = [ai, bi] indicates that there is an undirected edge between nodes ai and bi in the graph. Return true if the edges of the given graph make up a valid tree, and false otherwise."
  },
  {
    "Question" : "Word Ladder",
    "Categorie" : "Graphs",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0127-word-ladder.py",
    "Prompt": "A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that: Every adjacent pair of words differs by a single letter. Every si for 1 <= i <= k is in wordList. Note that beginWord does not need to be in wordList. sk == endWord Given two words, beginWord and endWord, and a dictionary wordList, return the number of words in the shortest transformation sequence from beginWord to endWord, or 0 if no such sequence exists."
  },
  {
    "Question" : "Reconstruct Itinerary",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0332-reconstruct-itinerary.py",
    "Prompt": "You are given a list of airline tickets where tickets[i] = [fromi, toi] represent the departure and the arrival airports of one flight. Reconstruct the itinerary in order and return it. All of the tickets belong to a man who departs from 'JFK', thus, the itinerary must begin with 'JFK'. If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary ['JFK', 'LGA'] has a smaller lexical order than ['JFK', 'LGB'].You may assume all tickets form at least one valid itinerary. You must use all the tickets once and only once."
  },
  {
    "Question" : "Min Cost to Connect all Points",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1584-min-cost-to-connect-all-points.py",
    "Prompt": "You are given an array points representing integer coordinates of some points on a 2D-plane, where points[i] = [xi, yi]. The cost of connecting two points [xi, yi] and [xj, yj] is the manhattan distance between them: |xi - xj| + |yi - yj|, where |val| denotes the absolute value of val. Return the minimum cost to make all points connected. All points are connected if there is exactly one simple path between any two points."
  },
  {
    "Question" : "Network Delay Time",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0743-network-delay-time.py",
    "Prompt": "You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (ui, vi, wi), where ui is the source node, vi is the target node, and wi is the time it takes for a signal to travel from source to target. We will send a signal from a given node k. Return the minimum time it takes for all the n nodes to receive the signal. If it is impossible for all the n nodes to receive the signal, return -1."
  },
  {
    "Question" : "Swim in Rising Water",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0778-swim-in-rising-water.py",
    "Prompt": "You are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j). The rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are at most t. You can swim infinite distances in zero time. Of course, you must stay within the boundaries of the grid during your swim. Return the least time until you can reach the bottom right square (n - 1, n - 1) if you start at the top left square (0, 0)."
  },
  {
    "Question" : "Alien Dictionary",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0269-alien-dictionary.py",
    "Prompt": "There is a new alien language that uses the English alphabet. However, the order among the letters is unknown to you. You are given a list of strings words from the alien language's dictionary, where the strings in words are sorted lexicographically by the rules of this new language. Return a string of the unique letters in the new alien language sorted in lexicographically increasing order by the new language's rules. If there is no solution, return ''. If there are multiple solutions, return any of them."
  },
  {
    "Question" : "Cheapest Flights Within K Stops",
    "Categorie" : "Advanced Graphs",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0787-cheapest-flights-within-k-stops.py",
    "Prompt": "There are n cities connected by some number of flights. You are given an array flights where flights[i] = [fromi, toi, pricei] indicates that there is a flight from city fromi to city toi with cost pricei. You are also given three integers src, dst, and k, return the cheapest price from src to dst with at most k stops. If there is no such route, return -1."
  },
  {
    "Question" : "Climbing Stairs",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0070-climbing-stairs.py",
    "Prompt": "You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?"
  },
  {
    "Question" : "Min Cost Climbing Stairs",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0746-min-cost-climbing-stairs.py",
    "Prompt": "You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps. You can either start from the step with index 0, or the step with index 1. Return the minimum cost to reach the top of the floor."
  },
  {
    "Question" : "House Robber",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0198-house-robber.py",
    "Prompt": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night. Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police."
  },
  {
    "Question" : "House Robber II",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0213-house-robber-ii.py",
    "Prompt": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night. Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police."
  },
  {
    "Question" : "Longest Palindromic Substring",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0005-longest-palindromic-substring.py",
    "Prompt": "Given a string s, return the longest palindromic substring in s."
  },
  {
    "Question" : "Palindromic Substrings",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0647-palindromic-substrings.py",
    "Prompt": "Given a string s, return the number of palindromic substrings in it. A string is a palindrome when it reads the same backward as forward. A substring is a contiguous sequence of characters within the string."
  },
  {
    "Question" : "Decode Ways",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0091-decode-ways.py",
    "Prompt": "A message containing letters from A-Z can be encoded into numbers using the following mapping: 'A' -> '1' 'B' -> '2' ... 'Z' -> '26' To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, '11106' can be mapped into: 'AAJF' with the grouping (1 1 10 6) 'KJF' with the grouping (11 10 6) Note that the grouping (1 11 06) is invalid because '06' cannot be mapped into 'F' since '6' is different from '06'. Given a string s containing only digits, return the number of ways to decode it. The test cases are generated so that the answer fits in a 32-bit integer."
  },
  {
    "Question" : "Coin Change",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0322-coin-change.py",
    "Prompt": "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. You may assume that you have an infinite number of each kind of coin."
  },
  {
    "Question" : "Maximum Product Subarray",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0152-maximum-product-subarray.py",
    "Prompt": "Given an integer array nums, find a subarray that has the largest product, and return the product. The test cases are generated so that the answer will fit in a 32-bit integer."
  },
  {
    "Question" : "Word Break",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0139-word-break.py",
    "Prompt": "Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. Note that the same word in the dictionary may be reused multiple times in the segmentation."
  },
  {
    "Question" : "Longest Increasing Subsequence",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0300-longest-increasing-subsequence.py",
    "Prompt": "Given an integer array nums, return the length of the longest strictly increasing subsequence."
  },
  {
    "Question" : "Partial Equal Subset Sum",
    "Categorie" : "1-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0416-partition-equal-subset-sum.py",
    "Prompt": "Given an integer array nums, return true if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or false otherwise."
  },
  {
    "Question" : "Unique Paths",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0062-unique-paths.py",
    "Prompt": "There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner. The test cases are generated so that the answer will be less than or equal to 2 * 109."
  },
  {
    "Question" : "Longest Common Subsequence",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1143-longest-common-subsequence.py",
    "Prompt": "Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0. A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters. For example, 'ace' is a subsequence of 'abcde'. A common subsequence of two strings is a subsequence that is common to both strings."
  },
  {
    "Question" : "Best Time to Buy/Sell Stock Cooldown",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0309-best-time-to-buy-and-sell-stock-with-cooldown.py",
    "Prompt": "You are given an array prices where prices[i] is the price of a given stock on the ith day. Find the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions: After you sell your stock, you cannot buy stock on the next day (i.e., cooldown one day). Note: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again)."
  },
  {
    "Question" : "Coin Change II",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0518-coin-change-2.py",
    "Prompt": "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. Return the number of combinations that make up that amount. If that amount of money cannot be made up by any combination of the coins, return 0. You may assume that you have an infinite number of each kind of coin. The answer is guaranteed to fit into a signed 32-bit integer."
  },
  {
    "Question" : "Target Sum",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0494-target-sum.py",
    "Prompt": "You are given an integer array nums and an integer target. You want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers. For example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression '+2-1'. Return the number of different expressions that you can build, which evaluates to target."
  },
  {
    "Question" : "Interleaving String",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0097-interleaving-strings.py",
    "Prompt": "Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2. An interleaving of two strings s and t is a configuration where s and t are divided into n and ms bstrings respectively, such that: s = s1 + s2 + ... + sn t = t1 + t2 + ... + tm |n - m| <= 1 The interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ... Note: a + b is the concatenation of strings a and b."
  },
  {
    "Question" : "Longest Increasing Path in a Matrix",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0329-longest-increasing-path-in-a-matrix.py",
    "Prompt": "Given an m x n integers matrix, return the length of the longest increasing path in matrix. From each cell, you can either move in four directions: left, right, up, or down. You may not move diagonally or move outside the boundary (i.e., wrap-around is not allowed)."
  },
  {
    "Question" : "Distinct Subsequences",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0115-distinct-subsequences.py",
    "Prompt": "Given two strings s and t, return the number of distinct subsequences of s which equals t. The test cases are generated so that the answer fits on a 32-bit signed integer."
  },
  {
    "Question" : "Edit Distance",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0072-edit-distance.py",
    "Prompt": "Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. You have the following three operations permitted on a word: Insert a character, Delete a character, Replace a character"
  },
  {
    "Question" : "Burst Balloons",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0312-burst-balloons.py",
    "Prompt": "You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it. Return the maximum coins you can collect by bursting the balloons wisely."
  },
  {
    "Question" : "Regular Expression Matching",
    "Categorie" : "2-D Dynamic Programming",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0010-regular-expression-matching.py",
    "Prompt": "You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it. Return the maximum coins you can collect by bursting the balloons wisely."
  },
  {
    "Question" : "Maximum Subarray",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0053-maximum-subarray.py",
    "Prompt": "Given an integer array nums, find the subarray with the largest sum, and return its sum."
  },
  {
    "Question" : "Jump Game",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0055-jump-game.py",
    "Prompt": "You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. Return true if you can reach the last index, or false otherwise."
  },
  {
    "Question" : "Jump Game II",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0045-jump-game-ii.py",
    "Prompt": "You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0]. Each element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where: 0 <= j <= nums[i] and i + j < n Return the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1]."
  },
  {
    "Question" : "Gas Station",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0134-gas-station.py",
    "Prompt": "There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique."
  },
  {
    "Question" : "Hand of Striaght",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0846-hand-of-straights.py",
    "Prompt": "Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size groupSize, and consists of groupSize consecutive cards. Given an integer array hand where hand[i] is the value written on the ith card and an integer groupSize, return true if she can rearrange the cards, or false otherwise."
  },
  {
    "Question" : "Merge Triplets to From Target Triplet",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1899-merge-triplets-to-form-target-triplet.py",
    "Prompt": "A triplet is an array of three integers. You are given a 2D integer array triplets, where triplets[i] = [ai, bi, ci] describes the ith triplet. You are also given an integer array target = [x, y, z] that describes the triplet you want to obtain. To obtain target, you may apply the following operation on triplets any number of times (possibly zero): Choose two indices (0-indexed) i and j (i != j) and update triplets[j] to become [max(ai, aj), max(bi, bj), max(ci, cj)]. For example, if triplets[i] = [2, 5, 3] and triplets[j] = [1, 7, 5], triplets[j] will be updated to [max(2, 1), max(5, 7), max(3, 5)] = [2, 7, 5]. Return true if it is possible to obtain the target triplet [x, y, z] as an element of triplets, or false otherwise."
  },
  {
    "Question" : "Partition Labels",
    "Categorie" : "Greedy",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0763-partition-labels.py",
    "Prompt": "You are given a string s. We want to partition the string into as many parts as possible so that each letter appears in at most one part. Note that the partition is done so that after concatenating all the parts in order, the resultant string should be s. Return a list of integers representing the size of these parts."
  },
  {
    "Question" : "Valid Parenthesis String",
    "Categorie" : "Greedy", "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0678-valid-parenthesis-string.py",
    "Prompt": "Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid. The following rules define a valid string: Any left parenthesis '(' must have a corresponding right parenthesis ')'. Any right parenthesis ')' must have a corresponding left parenthesis '('. Left parenthesis '(' must go before the corresponding right parenthesis ')'. '*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string ""."
  },
  {
    "Question" : "Insert Interval",
    "Categorie" : "Intervals",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0057-insert-interval.py",
    "Prompt": "You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval. Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary). Return intervals after the insertion."
  },
  {
    "Question" : "Merge Intervals",
    "Categorie" : "Intervals",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0056-merge-intervals.py",
    "Prompt": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input."
  },
  {
    "Question" : "Non-Overlapping Intervals",
    "Categorie" : "Intervals",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0435-non-overlapping-intervals.py",
    "Prompt": "Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping."
  },
  {
    "Question" : "Meeting Rooms",
    "Categorie" : "Intervals",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0252-meeting-rooms.py",
    "Prompt": "Given an array of meeting time intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings."
  },
  {
    "Question" : "Meeting Rooms II",
    "Categorie" : "Intervals",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0253-meeting-rooms-ii.py",
    "Prompt": "Given an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required."
  },
  {
    "Question" : "Minimum Interval to Include Each Query",
    "Categorie" : "Intervals",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1851-minimum-interval-to-include-each-query.py",
    "Prompt": "You are given a 2D integer array intervals, where intervals[i] = [lefti, righti] describes the ith interval starting at lefti and ending at righti (inclusive). The size of an interval is defined as the number of integers it contains, or more formally righti - lefti + 1. You are also given an integer array queries. The answer to the jth query is the size of the smallest interval i such that lefti <= queries[j] <= righti. If no such interval exists, the answer is -1. Return an array containing the answers to the queries."
  },
  {
    "Question" : "Rotate Image",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0048-rotate-image.py",
    "Prompt": "You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise). You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation."
  },
  {
    "Question" : "Spiral Matrix",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0054-spiral-matrix.py",
    "Prompt": "Given an m x n matrix, return all elements of the matrix in spiral order."
  },
  {
    "Question" : "Set Matrix Zeros",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0073-set-matrix-zeroes.py",
    "Prompt": "Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's. You must do it in place."
  },
  {
    "Question" : "Happy Number",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0202-happy-number.py",
    "Prompt": "Write an algorithm to determine if a number n is happy. A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits. Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy. Return true if n is a happy number, and false if not."
  },
  {
    "Question" : "Plus One",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0066-plus-one.py",
    "Prompt": "You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's. Increment the large integer by one and return the resulting array of digits."
  },
  {
    "Question" : "Pow(x,n)",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0050-powx-n.py",
    "Prompt": "Implement pow(x, n), which calculates x raised to the power n (i.e., xn)."
  },
  {
    "Question" : "Multiply Strings",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0043-multiply-strings.py",
    "Prompt": "Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string. Note: You must not use any built-in BigInteger library or convert the inputs to integer directly."
  },
  {
    "Question" : "Detect Squares",
    "Categorie" : "Math & Geometery",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/2013-detect-squares.py",
    "Prompt": "You are given a stream of points on the X-Y plane. Design an algorithm that: Adds new points from the stream into a data structure. Duplicate points are allowed and should be treated as different points. Given a query point, counts the number of ways to choose three points from the data structure such that the three points and the query point form an axis-aligned square with positive area. An axis-aligned square is a square whose edges are all the same length and are either parallel or perpendicular to the x-axis and y-axis. Implement the DetectSquares class: DetectSquares() Initializes the object with an empty data structure. void add(int[] point) Adds a new point point = [x, y] to the data structure. int count(int[] point) Counts the number of ways to form axis-aligned squares with point point = [x, y] as described above."
  },
  {
    "Question" : "Single Number",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0136-single-number.py",
    "Prompt": "Given a non-empty array of integers nums, every element appears twice except for one. Find that single one. You must implement a solution with a linear runtime complexity and use only constant extra space."
  },
  {
    "Question" : "Number of 1 Bits",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0191-number-of-1-bits.py",
    "Prompt": "Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Note: Note that in some languages, such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned. In Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 3, the input represents the signed integer. -3."
  },
  {
    "Question" : "Counting Bits",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0338-counting-bits.py",
    "Prompt": "Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i."
  },
  {
    "Question" : "Reverse Bits",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0190-reverse-bits.py",
    "Prompt": "Reverse bits of a given 32 bits unsigned integer. Note: Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned. In Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825."
  },
  {
    "Question" : "Missing Number",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0268-missing-number.py",
    "Prompt": "Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array."
  },
  {
    "Question" : "Sum of Two Integers",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0371-sum-of-two-integers.py",
    "Prompt": "Given two integers a and b, return the sum of the two integers without using the operators + and -."
  },
  {
    "Question" : "Reverse Integer",
    "Categorie" : "Bit Manipulation",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0007-reverse-integer.py",
    "Prompt": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Assume the environment does not allow you to store 64-bit integers (signed or unsigned)."
  },
  {
    "Question" : "Maxium Number of Balloons",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1189-Maximum-Number-of-Balloons.py",
    "Prompt": "Given a string text, you want to use the characters of text to form as many instances of the word 'balloon' as possible. You can use each character in text at most once. Return the maximum number of instances that can be formed."
  },
  {
    "Question" : "Find all Numbers Disappeared in an Array",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0448-find-all-numbers-disappeared-in-an-array.py",
    "Prompt": "Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums."
  },
  {
    "Question" : "Next Greater Element I",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0496-next-greater-element-i.py",
    "Prompt": "The next greater element of some element x in an array is the first greater element that is to the right of x in the same array. You are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2. For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1. Return an array ans of length nums1.length such that ans[i] is the next greater element as described above."
  },
  {
    "Question" : "Grid Game",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/2017-grid-game.py",
    "Prompt": "You are given a 0-indexed 2D array grid of size 2 x n, where grid[r][c] represents the number of points at position (r, c) on the matrix. Two robots are playing a game on this matrix. Both robots initially start at (0, 0) and want to reach (1, n-1). Each robot may only move to the right ((r, c) to (r, c + 1)) or down ((r, c) to (r + 1, c)). At the start of the game, the first robot moves from (0, 0) to (1, n-1), collecting all the points from the cells on its path. For all cells (r, c) traversed on the path, grid[r][c] is set to 0. Then, the second robot moves from (0, 0) to (1, n-1), collecting the points on its path. Note that their paths may intersect with one another. The first robot wants to minimize the number of points collected by the second robot. In contrast, the second robot wants to maximize the number of points it collects. If both robots play optimally, return the number of points collected by the second robot."
  },
  {
    "Question" : "Find All Anagrams In a String",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0438-find-all-anagrams-in-a-string.py",
    "Prompt": "Given two strings s and p, return an array of all the start indices of p's anagrams in s. You may return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."
  },
  {
    "Question" : "Find The Index of The First Occurrence In a String",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0028-find-the-index-of-the-first-occurrence-in-a-string.py",
    "Prompt": "Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack."
  },
  {
    "Question" : "Continuous Subarray Sum",
    "Categorie" : "Arrays and Hashing",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0523-continuous-subarray-sum.py",
    "Prompt": "Given an integer array nums and an integer k, return true if nums has a good subarray or false otherwise. A good subarray is a subarray where: its length is at least two, and the sum of the elements of the subarray is a multiple of k. Note that: A subarray is a contiguous part of the array. An integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k."
  },
  {
    "Question" : "4Sum",
    "Categorie" : "Two Pointers",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0018-4sum.py",
    "Prompt": "Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that: 0 <= a, b, c, d < n a, b, c, and d are distinct. nums[a] + nums[b] + nums[c] + nums[d] == target You may return the answer in any order."
  },
  {
    "Question" : "Move Zeros",
    "Categorie" : "Two Pointers",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0283-move-zeroes.py",
    "Prompt": "Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements. Note that you must do this in-place without making a copy of the array."
  },
  {
    "Question" : "Merge Sorted Array",
    "Categorie" : "Two Pointers",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0088-merge-sorted-array.py",
    "Prompt": "You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. Merge nums1 and nums2 into a single array sorted in non-decreasing order. The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n."
  },
  {
    "Question" : "Find K Closest Elements",
    "Categorie" : "Sliding Window",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0658-find-k-closest-elements.py",
    "Prompt": "Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order. An integer a is closer to x than an integer b if: |a - x| < |b - x|, or |a - x| == |b - x| and a < b"
  },
  {
    "Question" : "Simplify Path",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0071-simplify-path.py",
    "Prompt": "Given a string path, which is an absolute path (starting with a slash '/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path. In a Unix-style file system, a period '.' refers to the current directory, a double period '..' refers to the directory up a level, and any multiple consecutive slashes (i.e. '//') are treated as a single slash '/'. For this problem, any other format of periods such as '...' are treated as file/directory names. The canonical path should have the following format: The path starts with a single slash '/'. Any two directories are separated by a single slash '/'. The path does not end with a trailing '/'. The path only contains the directories on the path from the root directory to the target file or directory (i.e., no period '.' or double period '..') Return the simplified canonical path."
  },
  {
    "Question" : "Decode String",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0394-decode-string.py",
    "Prompt": "Given an encoded string, return its decoded string. The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer. You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4]. The test cases are generated so that the length of the output will never exceed 105."
  },
  {
    "Question" : "Remove All Adjacent Duplicates In String II",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1209-remove-all-adjacent-duplicates-in-string-ii.py",
    "Prompt": "You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together. We repeatedly make k duplicate removals on s until we no longer can. Return the final string after all such duplicate removals have been made. It is guaranteed that the answer is unique."
  },
  {
    "Question" : "Online Stock Span",
    "Categorie" : "Stack",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0901-online-stock-span.py",
    "Prompt": "Design an algorithm that collects daily price quotes for some stock and returns the span of that stock's price for the current day. The span of the stock's price in one day is the maximum number of consecutive days (starting from that day and going backward) for which the stock price was less than or equal to the price of that day. For example, if the prices of the stock in the last four days is [7,2,1,2] and the price of the stock today is 2, then the span of today is 4 because starting from today, the price of the stock was less than or equal 2 for 4 consecutive days. Also, if the prices of the stock in the last four days is [7,34,1,2] and the price of the stock today is 8, then the span of today is 3 because starting from today, the price of the stock was less than or equal 8 for 3 consecutive days. Implement the StockSpanner class: StockSpanner() Initializes the object of the class. int next(int price) Returns the span of the stock's price given that today's price is price."
  },
  {
    "Question" : "Split Array Largest Sum",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0410-split-array-largest-sum.py",
    "Prompt": "Given an integer array nums and an integer k, split nums into k non-empty subarrays such that the largest sum of any subarray is minimized. Return the minimized largest sum of the split. A subarray is a contiguous part of the array."
  },
  {
    "Question" : "Search In Rotated Sorted Array",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0033-search-in-rotated-sorted-array.py",
    "Prompt": "There is an integer array nums sorted in ascending order (with distinct values). Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2]. Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums. You must write an algorithm with O(log n) runtime complexity."

  },
  {
    "Question" : "Find Minimum In Rotated Sorted Array",
    "Categorie" : "Binary Search",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0153-find-minimum-in-rotated-sorted-array.py",
    "Prompt": "Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become: [4,5,6,7,0,1,2] if it was rotated 4 times. [0,1,2,4,5,6,7] if it was rotated 7 times. Notice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]]. Given the sorted rotated array nums of unique elements, return the minimum element of this array. You must write an algorithm that runs in O(log n) time."

  },
  {
    "Question" : "Guess Number Higher Or Lower",
    "Categorie" : "Binary Search",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0374-guess-number-higher-or-lower.py",
    "Prompt": "We are playing the Guess Game. The game is as follows: I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess. You call a pre-defined API int guess(int num), which returns three possible results: -1: Your guess is higher than the number I picked (i.e. num > pick). 1: Your guess is lower than the number I picked (i.e. num < pick). 0: your guess is equal to the number I picked (i.e. num == pick). Return the number that I picked."

  },
  {
    "Question" : "Linked List Cycle",
    "Categorie" : "Linked List",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0141-linked-list-cycle.py",
    "Prompt": "Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter. Return true if there is a cycle in the linked list. Otherwise, return false."

  },
  {
    "Question" : "Swap Nodes In Pairs",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0024-swap-nodes-in-pairs.py",
    "Prompt": "Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)"

  },
  {
    "Question" : "Reverse Linked List II",
    "Categorie" : "Linked List",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0092-reverse-linked-list-ii.py",
    "Prompt": "Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list."

  },
  {
    "Question" : "Intersection of Two Linked Lists",
    "Categorie" : "Linked List",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0160-intersection-of-two-linked-lists.py",
    "Prompt": "Given the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. If the two linked lists have no intersection at all, return null."

  },
  {
    "Question" : "Reverse Nodes In K Group",
    "Categorie" : "Linked List",
    "Difficulty": "Hard",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0025-reverse-nodes-in-k-group.py",
    "Prompt": "Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list. k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is. You may not alter the values in the list's nodes, only nodes themselves may be changed."

  },
  {
    "Question" : "Diameter of Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0543-diameter-of-binary-tree.py",
    "Prompt": "Given the root of a binary tree, return the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root. The length of a path between two nodes is represented by the number of edges between them."

  },
  {
    "Question" : "Merge Two Binary Trees",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0617-merge-two-binary-trees.py",
    "Prompt": "You are given two binary trees root1 and root2. Imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. You need to merge the two trees into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of the new tree. Return the merged tree. Note: The merging process must start from the root nodes of both trees."

  },
  {
    "Question" : "Path Sum",
    "Categorie" : "Trees",
    "Difficulty": "Easy",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0064-minimum-path-sum.py",
    "Prompt": "Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. A leaf is a node with no children."

  },
  {
    "Question" : "Count Good Nodes In Binary Tree",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1448-count-good-nodes-in-binary-tree.py",
    "Prompt": "Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X. Return the number of good nodes in the binary tree."

  },
  {
    "Question" : "Validate Binary Search Tree",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0098-validate-binary-search-tree.py",
    "Prompt": "Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows: The left subtree of a node contains only nodes with keys less than the node's key. The right subtree of a node contains only nodes with keys greater than the node's key. Both the left and right subtrees must also be binary search trees."

  },
  {
    "Question" : "Construct Binary Tree From Preorder And Inorder Traversal",
    "Categorie" : "Trees",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0105-construct-binary-tree-from-preorder-and-inorder-traversal.py",
    "Prompt": "Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree."

  },
  {
    "Question" : "K Closest Points to Origin",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0973-k-closest-points-to-origin.py",
    "Prompt": "Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0). The distance between two points on the X-Y plane is the Euclidean distance (i.e., √(x1 - x2)2 + (y1 - y2)2). You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in)."

  },
  {
    "Question" : "Kth Largest Element In An Array",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0215-kth-largest-element-in-an-array.py",
    "Prompt": "Given an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. You must solve it in O(n) time complexity."

  },
  {
    "Question" : "Seat Reservation Manager",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1845-seat-reservation-manager.py",
    "Prompt": "Design a system that manages the reservation state of n seats that are numbered from 1 to n. Implement the SeatManager class: SeatManager(int n) Initializes a SeatManager object that will manage n seats numbered from 1 to n. All seats are initially available. int reserve() Fetches the smallest-numbered unreserved seat, reserves it, and returns its number. void unreserve(int seatNumber) Unreserves the seat with the given seatNumber."

  },
  {
    "Question" : "Find The Kth Largest Integer In The Array",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/1985-find-the-kth-largest-integer-in-the-array.py",
    "Prompt": "Given an integer array nums and an integer k, return the kth largest element in the array. Note that it is the kth largest element in the sorted order, not the kth distinct element. You must solve it in O(n) time complexity."

  },
  {
    "Question" : "Reorganize String",
    "Categorie" : "Heap",
    "Difficulty": "Medium",
    "Solution": "https://github.com/neetcode-gh/leetcode/blob/main/python/0767-reorganize-string.py",
    "Prompt": "Given a string s, rearrange the characters of s so that any two adjacent characters are not the same. Return any possible rearrangement of s or return '' if not possible."

  }
]
